# Set up EFS first so that all of your servers sync the /etc/letsencrypt/ directory. This will also keep your certs safe when servers are terminated. See 20-efs.config.
# The webroot is also synced on EFS, meaning you should be able to request certificates with multiple servers behind a load balancer.

# Provision the Elastic Beanstalk app and make sure to also set up EFS in 20-efs.config.
# Then SSH to the EC2 instance and get the initial cert by invoking certbot manually:

# eb ssh
# sudo su
# CERTBOT_EMAIL=your.email@gmail.com
# CERTBOT_DOMAIN=yourdomainhere.us-west-2.elasticbeanstalk.com
# certbot certonly --non-interactive --agree-tos --keep-until-expiring --installer nginx --authenticator webroot --webroot-path /var/acme-challenges --email $CERTBOT_EMAIL --domains $CERTBOT_DOMAIN
# ln -sf $CERTBOT_DOMAIN /etc/letsencrypt/live/eb

# Once you have the cert and the symlink is set up, update nginx.conf to use it.

# packages:
#   yum:
#     python3-pip: []
#
# commands:
#   "01-certbot":
#     test: test ! -f /usr/local/bin/certbot
#     command: |
#       pip3 install certbot
#
# files:
#   /opt/certbot-renew:
#     mode: "000755"
#     owner: root
#     group: root
#     content: |
#       #!/bin/bash -e
#       # Sleep randomly, up to 10 minutes, to make it less likely that two servers try to renew at the same time
#       sleep $(($RANDOM%600))
#       /usr/local/bin/certbot renew
#       # Reload the nginx configuration every time, since there may be multiple servers running. Using --renew-hook would only reload nginx on the server that made the renewal.
#       systemctl reload nginx.service
#
#   /etc/systemd/system/certbot-renew.service:
#     mode: "000644"
#     owner: root
#     group: root
#     content: |
#       [Unit]
#       Description="Service that runs /opt/certbot-renew"
#       Requires=certbot-renew.timer
#       [Service]
#       Type=simple
#       ExecStart=/opt/certbot-renew
#
#   /etc/systemd/system/certbot-renew.timer:
#     mode: "000644"
#     owner: root
#     group: root
#     content: |
#       [Unit]
#       Description="Timer for certbot-renew.service"
#       [Timer]
#       Unit=certbot-renew.service
#       OnBootSec=5m
#       OnUnitActiveSec=1d
#       [Install]
#       WantedBy=timers.target
#
# container_commands:
#   "01-enable-timer":
#     command: |
#       systemctl daemon-reload
#       systemctl enable --now certbot-renew.timer
